- name: Dynamically add hosts to inventory
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Add a Linux host to the inventory
      add_host:
        name: "{{ linux_host }}"
        ansible_user: "{{ linux_user }}"
        ansible_password: "{{ linux_password }}"
        groups: linux
      when: linux_host is defined and linux_user is defined

- name: Install Alloy on Linux
  hosts: linux
  become: yes
  tasks:
    - name: Install GPG
      package:
        name: gpg
        state: present
      when: ansible_os_family in ["Debian", "RedHat", "Suse"]

    - name: Create directory for APT keyrings (Debian only)
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
      when: ansible_os_family == "Debian"

    - name: Check if Grafana GPG key already exists (Debian)
      stat:
        path: /etc/apt/keyrings/grafana.gpg
      register: grafana_gpg_key
      when: ansible_os_family == "Debian"

    - name: Download and add Grafana GPG key (Debian)
      shell: |
        wget -q -O /etc/apt/keyrings/grafana.gpg https://apt.grafana.com/gpg.key
      when: ansible_os_family == "Debian" and not grafana_gpg_key.stat.exists

    - name: Check if Grafana GPG key already exists (RedHat/Suse)
      stat:
        path: "{{ '/etc/pki/rpm-gpg/RPM-GPG-KEY-grafana' if ansible_os_family == 'RedHat' else '/etc/zypp/repos.d/RPM-GPG-KEY-grafana' }}"
      register: grafana_gpg_key_rpm

    - name: Download and add Grafana GPG key (RedHat/Suse)
      shell: |
        rpm --import https://packages.grafana.com/gpg.key
      when: ansible_os_family in ['RedHat', 'Suse'] and not grafana_gpg_key_rpm.stat.exists

    - name: Check if Grafana repository file already exists
      stat:
        path: "{{ '/etc/apt/sources.list.d/grafana.list' if ansible_os_family == 'Debian' else '/etc/yum.repos.d/grafana.repo' if ansible_os_family == 'RedHat' else '/etc/zypp/repos.d/grafana.repo' }}"
      register: grafana_repo

    - name: Add Grafana repository
      block:
        - name: Add Grafana APT repository (Debian)
          apt_repository:
            repo: "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main"
            state: present
          when: ansible_os_family == "Debian" and not grafana_repo.stat.exists

        - name: Add Grafana YUM repository (RedHat)
          yum_repository:
            name: grafana
            description: Grafana
            baseurl: https://packages.grafana.com/oss/rpm
            gpgcheck: yes
            gpgkey: https://packages.grafana.com/gpg.key
            enabled: yes
          when: ansible_os_family == "RedHat" and not grafana_repo.stat.exists

        - name: Add Grafana Zypper repository (Suse)
          command: >
            zypper addrepo
            --name 'Grafana'
            --check
            --gpgcheck
            --refresh
            'https://packages.grafana.com/oss/rpm'
            grafana
          when: ansible_os_family == "Suse" and not grafana_repo.stat.exists

    - name: Update package list and install Alloy
      block:
        - name: Update APT package list (Debian)
          apt:
            update_cache: yes
          when: ansible_os_family == "Debian"

        - name: Install Alloy on Debian
          apt:
            name: alloy
            state: present
          when: ansible_os_family == "Debian"

        - name: Install Alloy on RedHat
          yum:
            name: alloy
            state: present
          when: ansible_os_family == "RedHat"
          
        - name: Install Alloy on Suse
          zypper:
            name: alloy
            state: present
          when: ansible_os_family == "Suse"

    - name: Ensure Alloy configuration directory exists
      file:
        path: /etc/alloy
        state: directory
        mode: '0755'

    - name: Copy Alloy configuration file based on OS
      template:
        src: "{{ 'config.alloy' if ansible_os_family == 'Debian' else 'config1.alloy' if ansible_os_family == 'RedHat' else 'config2.alloy' }}"
        dest: /etc/alloy/config.alloy

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and start Alloy service
      systemd:
        name: alloy
        enabled: yes
        state: restarted

    - name: Check Alloy service status
      systemd:
        name: alloy
        state: started
        enabled: yes
      register: alloy_status
