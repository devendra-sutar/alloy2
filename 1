# ========================================
# 0. ServiceAccount
# ========================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubesage-agent-sa
  namespace: default

---
# ========================================
# 1. ConfigMap – non-sensitive .env (no secrets)
# ========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-env
  namespace: default
data:
  .env: |
    # Cluster Configuration
    CLUSTER_NAME=dev-test-cluster

    # Backend Configuration
    BACKEND_URL=https://10.0.32.106:8006/api/v2.0/onboard
    BACKEND_WS_URL=wss://10.0.32.106:8006/api/v2.0/ws

    # WebSocket Server
    PORT=9000

    # Security
    SKIP_TLS_VERIFY=true

    # Logging
    DEBUG=true
    LOG_LEVEL=INFO

---
# ========================================
# 2. Secret – sensitive values (base64 encoded)
# ========================================
apiVersion: v1
kind: Secret
metadata:
  name: kubesage-agent-secret
  namespace: default
type: Opaque
data:
  # Base64 encoded values
  AGENT_ID: YzYyYmIyYTQtN2ZmNS00YmY0LTk4ODUtODNhMjc2YjkwOWU5
  API_KEY: a3NfdjNveDZXdWdLdU1BNE1XYlZiSHVqamlrUlZwWU5rR1o=

---
# ========================================
# 3. RBAC: ClusterRole
# ========================================
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubesage-agent-role
rules:
- apiGroups: [""]
  resources: ["nodes", "namespaces", "pods", "services", "persistentvolumes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["get", "list", "watch"]

---
# ========================================
# 4. RBAC: ClusterRoleBinding
# ========================================
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubesage-agent-binding
subjects:
- kind: ServiceAccount
  name: kubesage-agent-sa
  namespace: default
roleRef:
  kind: ClusterRole
  name: kubesage-agent-role
  apiGroup: rbac.authorization.k8s.io

---
# ========================================
# 5. Deployment – uses Secret + ConfigMap + hostNetwork + RBAC
# ========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-agent
  namespace: default
  labels:
    app: my-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-agent
  template:
    metadata:
      labels:
        app: my-agent
    spec:
      # === FIX 1: Network access ===
      #hostNetwork: true
      #dnsPolicy: ClusterFirstWithHostNet

      # === FIX 2: RBAC ===
      serviceAccountName: kubesage-agent-sa

      containers:
        - name: agent
          image: devendra750/onboard:v2   # CHANGE TO YOUR IMAGE
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000

          # === 1. Mount .env from ConfigMap ===
          volumeMounts:
            - name: env-volume
              mountPath: /app/.env
              subPath: .env

          # === 2. Inject Secret as environment variables ===
          envFrom:
            - secretRef:
                name: kubesage-agent-secret

          # === 3. Optional: Override specific values ===
          env:
            - name: CLUSTER_NAME
              value: "my-test-cluster"
            - name: BACKEND_URL
              value: "https://10.0.32.106:8006/api/v2.0/onboard"
            - name: BACKEND_WS_URL
              value: "wss://10.0.32.106:8006/api/v2.0/ws"

      # === Volumes ===
      volumes:
        - name: env-volume
          configMap:
            name: agent-env

---
# ========================================
# 6. Service – internal access
# ========================================
apiVersion: v1
kind: Service
metadata:
  name: my-agent-svc
  namespace: default
spec:
  selector:
    app: my-agent
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 9000
  type: ClusterIP
